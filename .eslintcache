[{"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\index.js":"1","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\reportWebVitals.js":"2","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\App.js":"3","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\components\\TotalDisplay.js":"4","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\components\\CalcButton.js":"5","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\reducers\\index.js":"6","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\actions\\index.js":"7"},{"size":517,"mtime":1616560066635,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1616560066636,"results":"10","hashOfConfig":"9"},{"size":3351,"mtime":1616652036735,"results":"11","hashOfConfig":"9"},{"size":440,"mtime":1616560066635,"results":"12","hashOfConfig":"9"},{"size":296,"mtime":1616560066634,"results":"13","hashOfConfig":"9"},{"size":1573,"mtime":1616651906534,"results":"14","hashOfConfig":"9"},{"size":953,"mtime":1616652026670,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j2s2nr",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\index.js",[],"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\reportWebVitals.js",[],"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\App.js",["33","34"],"import React, { useReducer } from 'react';\r\nimport reducer, { initialState } from './reducers'\r\nimport './App.css';\r\nimport TotalDisplay from './components/TotalDisplay';\r\nimport CalcButton from './components/CalcButton';\r\nimport { applyNumber, changeOperation, clearDisplay, remReturn, remClear ,remValue } from './actions'\r\n\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const applyNum = (num) => {\r\n    isNaN(num) ?\r\n    console.warn(`${num} is not a valid input, please use a number.`) :\r\n    dispatch(applyNumber(num)) \r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\" /> Lambda Reducer Challenge</a>\r\n      </nav>\r\n\r\n      <div className=\"container row mt-5\">\r\n        <div className=\"col-md-12 d-flex justify-content-center\">\r\n          <form name=\"Cal\">\r\n\r\n            <TotalDisplay value={state.total} />\r\n            <div className=\"row details\">\r\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\r\n              <span id=\"memory\"><b>Memory:</b>{state.memory}</span>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={\"M+\"} \r\n                onClick={ ()=> dispatch(remValue(state.total))}\r\n              />\r\n              <CalcButton value={\"MR\"} \r\n                onClick={ ()=> dispatch(remReturn(state.memory))}\r\n              />\r\n              <CalcButton value={\"MC\"} \r\n                onClick={ ()=> dispatch(remClear()) }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={1}\r\n                // onClick={ ()=>{ dispatch(addOne()) }\r\n                onClick={() => { applyNum(1); }}\r\n              />\r\n              <CalcButton value={2} \r\n              onClick={() => { applyNum(2) }}/>\r\n              <CalcButton value={3} \r\n              onClick={() => { applyNum(3) }}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={4} \r\n              onClick={() => { applyNum(4) }}/>\r\n              <CalcButton value={5} \r\n              onClick={() => { applyNum(5) }}/>\r\n              <CalcButton value={6} \r\n              onClick={() => { applyNum(6) }}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={7} \r\n              onClick={() => { applyNum(7) }}/>\r\n              <CalcButton value={8} \r\n              onClick={() => { applyNum(8) }}/>\r\n              <CalcButton value={9} \r\n              onClick={() => { applyNum(9) }}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={\"+\"} \r\n              onClick={()=>{dispatch(changeOperation('+'))}}\r\n              />\r\n              <CalcButton value={\"*\"}\r\n              onClick={()=>{dispatch(changeOperation('*'))}}\r\n              />\r\n              <CalcButton value={\"-\"} \r\n              onClick={()=>{dispatch(changeOperation('-'))}}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row ce_button\">\r\n              <CalcButton value={\"CE\"} \r\n              onClick={()=>{dispatch(clearDisplay())}}\r\n              />\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\components\\TotalDisplay.js",[],["35","36"],"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\components\\CalcButton.js",[],"C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\reducers\\index.js",["37"],"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, REM_VALUE, REM_RETURN, REM_CLEAR } from './../actions';\r\n\r\nexport const initialState = {\r\n    total: 0,\r\n    operation: \"+\",\r\n    memory: 0\r\n}\r\n\r\nconst calculateResult = (num1, num2, operation) => {\r\n    switch(operation) {\r\n        case(\"+\"):\r\n            return num1 + num2;\r\n        case(\"*\"):\r\n            return num1 * num2;\r\n        case(\"-\"):\r\n            return num1 - num2;\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case(ADD_ONE):\r\n            return({\r\n                ...state,\r\n                total: state.total + 1\r\n            });\r\n\r\n        case(APPLY_NUMBER):\r\n            return ({ \r\n                ...state, \r\n                total: calculateResult(state.total, action.payload, state.operation)\r\n            });\r\n        \r\n        case(CHANGE_OPERATION):\r\n            return ({\r\n                ...state,\r\n                operation: action.payload\r\n            });\r\n        \r\n        case(CLEAR_DISPLAY):\r\n            return ({\r\n                ...state,\r\n                total: action.payload\r\n            })\r\n\r\n        case(REM_VALUE):\r\n            return ({\r\n                ...state,\r\n                memory: action.payload\r\n            })\r\n\r\n        case(REM_RETURN): return ({\r\n            ...state,\r\n            total: action.payload\r\n        })\r\n\r\n        case(REM_CLEAR): return ({\r\n            ...state,\r\n            memory: 0\r\n        })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\Users\\AlbFi\\projects\\temp\\web-guided-project-reducer\\web-module-project-reducer\\src\\actions\\index.js",[],{"ruleId":"38","severity":1,"message":"39","line":21,"column":9,"nodeType":"40","endLine":21,"endColumn":46},{"ruleId":"41","severity":1,"message":"42","line":21,"column":46,"nodeType":"40","endLine":21,"endColumn":94},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":10,"column":5,"nodeType":"49","messageId":"50","endLine":17,"endColumn":6},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]